<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.MyUserMapper">
	<insert id="insertUser" parameterType="MyUser">
		insert into myuser values(#{userId}, #{userNmae});
		<!-- 괄호안은 필드명 쓰는 것이라 카멜표기법 사용 -->
	</insert>
	
	<!-- resultType 속성을 사용하면 resultType 속성값으로 설정된 클래스로 객체를 생성하여
		 검색행의 컬럼값을 같은 이름의 객체 필드값으로 자동 저장하여 제공한다. = 자동 매핑 -->
	<!-- 문제점 : 검색행의 컬럼명과 resultType 속성값으로 설정된 클래스의 필드명이 모두 다른 경우(MyUser.java 참고),
		 		  resultType 속성값으로 설정된 클래스의 객체를 만들어주지 않고 대신 NULL을 제공한다.(안의 요소들이 전부 NULL을 가지게됨)
		 		  => NullPointException 발생! -->
	<!-- 
	<select id="selectUserList" resultType="MyUser">
		select * from myuser order by user_id;
	</select>
	 -->
	
	<!-- 해결법 1 : 검색행의 컬럼명을 resultType 속성값으로 설정된 클래스의 필드명과 같도록 검색한다. 
			=> Select 명령에서 Column Alias(별칭) 기능을 이용하여 검색대상의 별칭을 필드명과 같도록 검색하면 된다.-->
	<select id="selectUserList" resultType="userid"></select>
	<!-- 해결법 2 :  -->
	
</mapper>